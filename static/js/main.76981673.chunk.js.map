{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","components/Link.js","components/Links.js","components/NewLink.js","components/MyNav.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectFirestore","useFirestore","FieldValue","serverTimestamp","collection","useState","docs","setDocs","console","log","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","useStyles","makeStyles","theme","root","width","padding","margin","boxShadow","overrides","MuiCardContent","paddingBottom","youtube","color","fontWeight","fontSize","iFrameContainer","position","height","image","top","left","Link","title","linkUrl","embed","type","classes","React","Card","className","item","variant","CardHeader","styles","dangerouslySetInnerHTML","__html","src","CardActions","IconButton","onClick","url","docId","currentURl","window","location","href","localProduction","split","slice","collectionRef","currentViews","flag","get","then","exists","views","update","set","catch","error","handleClick","aria-label","style","red","Typography","Links","linkComponents","map","key","fileUrl","container","alignItems","justify","direction","paper","backgroundColor","palette","background","border","shadows","spacing","myButton","backgroundImage","flexGrow","menuButton","marginRight","link","textDecoration","MyNav","edge","to","disabled","larger","mainDiv","large","App","xs","sm","md","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.76981673.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCGYEDMldWHUn_bmc5uzVzcauszY5gtr8w\",\r\n    authDomain: \"eastfiregram.firebaseapp.com\",\r\n    databaseURL: \"https://eastfiregram.firebaseio.com\",\r\n    projectId: \"eastfiregram\",\r\n    storageBucket: \"eastfiregram.appspot.com\",\r\n    messagingSenderId: \"297876507107\",\r\n    appId: \"1:297876507107:web:ab92da507ab603afa5b8d6\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport {projectStorage, projectFirestore, timestamp};","import {useState, useEffect} from 'react';\r\nimport {projectFirestore} from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n    console.log(\"in firestore\");\r\n    useEffect(() => {\r\n        // this creates a listener for changes to the collection with then ame of the passed in collection\r\n        // returns a function to unsub\r\n        const unsub = projectFirestore.collection(collection)\r\n        // order by the created date is descending order\r\n            .orderBy('order')\r\n            .onSnapshot((snap) => {\r\n                let documents = [];\r\n                snap.forEach((doc) => {\r\n                    // push the info from the each of the items in the collection\r\n                    documents.push({\r\n                        ...doc.data(), id: doc.id\r\n                    });\r\n                });\r\n                setDocs(documents);\r\n            });\r\n        // clean up function\r\n        return () => unsub();\r\n\r\n\r\n    }, [collection]);\r\n    console.log(\"in firestore docs\", docs);\r\n    return {docs};\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport {projectFirestore} from \"../firebase/config\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"90%\",\r\n        padding: \"8px !important\",\r\n        margin: \"5px\",\r\n        boxShadow: \"0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)\"\r\n    },\r\n    overrides: {\r\n        MuiCardContent: {\r\n            root: {\r\n                padding: 8,\r\n                \"&:last-child\": {\r\n                    paddingBottom: 0,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    youtube: {\r\n        color: \"black\", fontWeight: 500, fontSize: 20\r\n    },\r\n    iFrameContainer: {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        paddingBottom: \"56.25%\",\r\n        height: 0,\r\n    },\r\n    image: {\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n}));\r\n\r\nconst Link = ({title, linkUrl, embed, type}) => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleClick = (url, docId) => {\r\n        console.log(\"i was clicked\", docId);\r\n        let currentURl = window.location.href;\r\n        let parts = currentURl.split(\"/\");\r\n        let localProduction = currentURl.slice(7, 12) === \"local\" ? \"local\" : \"production\";\r\n        let currentPage = \"links\"; //parts[parts.length - 1];\r\n        let collection = \"analytics\";\r\n\r\n        const collectionRef = projectFirestore.collection(collection);\r\n        let currentViews = 0;\r\n        let flag = true;\r\n        let localCollection = collectionRef.doc(localProduction).collection(currentPage).doc(docId).get().then(function (doc) {\r\n            if (doc.exists) {\r\n                console.log(\"doc:\", doc.data());\r\n                currentViews = doc.data().views;\r\n                console.log(\"current views:\", currentViews);\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                flag = false;\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).then(() => {\r\n            if (flag) {\r\n                collectionRef.doc(localProduction).collection(currentPage).doc(docId).update({\r\n                    views: currentViews + 1\r\n                }).then(function () {\r\n                    console.log(\"Document successfully updated!\");\r\n                });\r\n            } else {\r\n                collectionRef.doc(localProduction).collection(currentPage).doc(docId).set({\r\n                    \"views\": 1\r\n                }).then(function () {\r\n                    console.log(\"Document successfully updated!\");\r\n                }).catch(function (error) {\r\n                    console.log(\"Error getting document 2:\", error);\r\n                });\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n        window.location.href = url;\r\n    };\r\n\r\n    console.log(\"Type:\", type);\r\n\r\n    return (\r\n        <Card boxShadow={3} className={classes.root} item variant=\"outlined\">\r\n            <CardHeader styles={{padding: \"8px !important\"}}\r\n                        title={title}\r\n            />\r\n\r\n            <div className={\"iframe-container\"}>\r\n                {\r\n                    type === \"video\" ? <div dangerouslySetInnerHTML={{__html: embed}}></div> :\r\n                        <img className={classes.image} src={embed}/>\r\n                }\r\n\r\n            </div>\r\n\r\n            <CardActions>\r\n                <IconButton onClick={() => {\r\n                    handleClick(linkUrl, title)\r\n                }} aria-label=\"share\">\r\n                    <YouTubeIcon style={{color: red[500]}} fontSize=\"large\"/>\r\n                    <Typography\r\n                        className={classes.youtube}> {type === \"video\" ? \"Watch on YouTube\" : \"Check out my channel on YouTube!\"} </Typography>\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default Link;","import React, {useEffect} from 'react';\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\nimport Link from \"./Link\";\r\nimport analytics from \"../data/analytics\"\r\nimport {projectFirestore} from \"../firebase/config\";\r\n// import useFirestoreAnalytics from \"../hooks/useFirestoreAnalytics\";\r\n\r\nconst Links = () => {\r\n    const {docs} = useFirestore(\"links\");\r\n    console.log(\"links\", docs);\r\n    let currentURl = window.location.href;\r\n    let parts = currentURl.split(\"/\");\r\n    let collection = \"analytics\";\r\n    let docId = \"links\";\r\n    let localProduction = currentURl.slice(7, 12);\r\n    let currentPage = \"links\"; // parts[parts.length - 1];\r\n\r\n    useEffect(() => {\r\n        const collectionRef = projectFirestore.collection(collection);\r\n        let currentViews = 0;\r\n\r\n        let localCollection = collectionRef.doc(localProduction).collection(currentPage).doc(docId).get().then(function (doc) {\r\n            if (doc.exists) {\r\n                console.log(\"doc:\", doc.data());\r\n                currentViews = doc.data().views;\r\n                console.log(\"current views:\", currentViews);\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).then(() => {\r\n            collectionRef.doc(localProduction).collection(currentPage).doc(currentPage).update({\r\n                views: currentViews + 1\r\n            }).then(function () {\r\n                console.log(\"Document successfully updated!\");\r\n            });\r\n        }).catch(function (error) {\r\n            console.log(\"Error getting document:\", error);\r\n\r\n        });\r\n\r\n    }, []);\r\n\r\n    const linkComponents = docs.map(doc => (\r\n\r\n        <Link key={doc.id} title={doc.title} type={doc.type} linkUrl={doc.linkUrl}\r\n              embed={doc.type === \"video\" ? doc.embed : doc.fileUrl}/>\r\n    ));\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\"\r\n              justify=\"center\" direction=\"column\">\r\n            {/*/!links!/*/}\r\n            {docs && linkComponents}\r\n        </Grid>\r\n\r\n    )\r\n};\r\n\r\nexport default Links;","import React, {useState} from 'react';\r\nimport Modal from \"@material-ui/core/Modal/Modal\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport {projectFirestore, timestamp} from \"../firebase/config\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    myButton: {\r\n        backgroundColor: \" #21D4FD\",\r\n        backgroundImage: \"linear-gradient(19deg, #21D4FD 0%, #B721FF 100%)\"\r\n    }\r\n}));\r\n//\r\n// const handleClick = (e) => {\r\n//     if (e.target.classList.contains('backdrop'))\r\n//         setSelectedImg(null)\r\n// };\r\n\r\n\r\nconst NewLink = () => {\r\n    const classes = useStyles();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [embed, setEmbed] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n    const [fileUrl, setFileUrl] = useState(\"\");\r\n    const [linkUrl, setLinkUrl] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        const collectionRef = projectFirestore.collection('links');\r\n        console.log(\"Submit\", e);\r\n        const createdAt = timestamp();\r\n        if (title !== \"\" && type === \"video\") {\r\n            collectionRef.add({\r\n                createdAt,\r\n                type,\r\n                title,\r\n                linkUrl,\r\n                embed\r\n            });\r\n        } else {\r\n            collectionRef.add({\r\n                createdAt,\r\n                type,\r\n                title,\r\n                linkUrl,\r\n                fileUrl\r\n            });\r\n        }\r\n\r\n        handleClose();\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        let {name, value, type} = event.target;\r\n        if (name === \"title\") {\r\n            console.log(value, name);\r\n            setTitle(value)\r\n        } else if (name === \"embed\") {\r\n            console.log(\"embed\", embed);\r\n            setEmbed(value)\r\n        } else if (name === \"type\") {\r\n            setType(value)\r\n        } else if (name === \"file\") {\r\n            let selected = event.target.files[0];\r\n            if (selected && types.includes(selected.type)) {\r\n                setFile(selected);\r\n            }\r\n        }\r\n        else {\r\n            setLinkUrl(value)\r\n        }\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <form>\r\n                <input type=\"text\" value={title} name=\"title\" placeholder=\"Title\"\r\n                       onChange={handleChange}/>\r\n                <br/>\r\n                <input type=\"text\" value={linkUrl} name=\"linkUrl\" placeholder=\"LinkUrl\"\r\n                       onChange={handleChange}/>\r\n                <h1>{title} {linkUrl}</h1>\r\n                <select\r\n                    value={type}\r\n                    onChange={handleChange}\r\n                    name=\"type\"\r\n                >\r\n                    <option value={null}>Select Type</option>\r\n                    <option value=\"image\">Image</option>\r\n                    <option value=\"video\">Video</option>\r\n                </select>\r\n                <br/>\r\n                {type === \"video\" &&\r\n                <textarea name=\"embed\" value={embed} placeholder=\"iFrame html\" onChange={handleChange}/>}\r\n                <br/>\r\n                {type === \"image\" && <input type=\"file\" name=\"file\" onChange={handleChange}/>}\r\n                {file && <ProgressBar file={file} setFile={setFile} setFileUrl={setFileUrl}/>}\r\n                {fileUrl && <p>{fileUrl}</p>}\r\n                <Button onClick={handleSubmit}>Submit</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button className={classes.myButton}\r\n                    variant=\"contained\" size=\"large\" onClick={handleOpen}>\r\n                <AddIcon/>\r\n            </Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewLink;","import React from 'react';\r\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: \"#263238\"\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        link: {\r\n            color: \"white\",\r\n            textDecoration: \"none\",\r\n        }\r\n    }))\r\n;\r\n\r\nexport default function MyNav() {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar className={classes.root} position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    East Bound\r\n                </Typography>\r\n                <Link className={classes.link} to=\"/about\">\r\n                    <Button color=\"inherit\">About</Button>\r\n                </Link>\r\n                <Link className={classes.link} to=\"/links\">\r\n                    <Button color=\"inherit\">Links</Button>\r\n                </Link>\r\n\r\n                <Button disabled={true} color=\"inherit\">Login</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React, {useState} from 'react';\n\nimport Links from \"./components/Links\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport NewLink from \"./components/NewLink\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport MyNav from \"./components/MyNav\";\n\nconst useStyles = makeStyles((theme) => ({\n        larger: {\n            width: 150,\n            height: 150,\n        },\n        root: {\n            padding: \"20px\",\n        },\n        mainDiv: {\n            padding: \"20px\",\n            backgroundColor: \"#F4D03F\",\n            backgroundImage: \"linear-gradient(132deg, #F4D03F 0%, #18b55f 100%)\",\n        },\n        large: {\n            width: theme.spacing(7),\n            height:\n                theme.spacing(7),\n        },\n    }))\n;\n\nfunction App() {\n    const classes = useStyles();\n    const headshot = \"https://firebasestorage.googleapis.com/v0/b/eastfiregram.appspot.com/o/2020-headshot.jpg?alt=media&token=3fae1710-d48d-49db-af75-627ca49abdd7\";\n    const logo = \"https://firebasestorage.googleapis.com/v0/b/eastfiregram.appspot.com/o/Logo%202.png?alt=media&token=f3e7e586-b9c2-408c-9825-83b75a339583\";\n    return (\n        <Router>\n            <MyNav/>\n            <div className={classes.mainDiv}>\n                <Grid container spacing={1} alignItems=\"center\"\n                      justify=\"center\" direction=\"column\">\n                    <Grid item xs={12}>\n                        <Link to={\"/add\"}>\n                            <Avatar className={classes.larger}\n                                    src={headshot}/>\n                        </Link>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <img className={\"responsive\"} src={logo}/>\n                    </Grid>\n                    <Grid item xs={0} sm={1} md={2}/>\n                    <Grid item xs={12} sm={10} md={8} container spacing={1} alignItems=\"center\"\n                          justify=\"center\" direction=\"column\">\n                        <Links/>\n                        {/*<Switch>*/}\n                        {/*<Route path=\"/\" component={Links}/>*/}\n                        {/*<Route path=\"/links\" exact component={Links}/>*/}\n                        {/*<Route path=\"/add\" component={NewLink}/>*/}\n                        {/*</Switch>*/}\n                    </Grid>\n                    <Grid item xs={0} sm={1} md={2}/>\n                </Grid>\n            </div>\n        </Router>\n    );\n}\n\n\nconst Home = () => (\n    <div>\n        <h1>Home Page </h1>\n    </div>\n)\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}